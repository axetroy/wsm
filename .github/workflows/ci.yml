name: ci

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        go: ['1.13.5']
        os: [ubuntu-latest, macOS-latest, windows-latest]
    name: Go ${{ matrix.go }} test in ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1

      - uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}

      - name: Environment
        run: |
          go version
          go env
      - name: Test
        run: make test

      - name: Build
        run: make build

      # after success
      #      - name: Coverage
      #        if: startsWith(matrix.os, 'ubuntu')
      #        run: |
      #          go get golang.org/x/tools/cmd/cover
      #          go get github.com/mattn/goveralls
      #          /home/runner/go/bin/goveralls -coverprofile=coverage.out -service=github-action -repotoken ${{ secrets.COVERALLS_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: job.status == 'success' && startsWith(matrix.os, 'ubuntu') && startsWith(github.ref, 'refs/tags/') && github.repository == 'axetroy/wsm'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          files: |
            bin/wsm_darwin_amd64.tar.gz
            bin/wsm_linux_amd64.tar.gz
            bin/wsm_windows_amd64.tar.gz
          draft: true